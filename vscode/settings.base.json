{
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "Lua.runtime.version": "LuaJIT",
    "Lua.workspace.preloadFileSize": 300000,
    "vim.useSystemClipboard": true,
    "vim.useCtrlKeys": true,
    "vim.enableNeovim": true,
    "vim.showMarksInGutter": true,
    "vim.smartRelativeLine": true,
    "vim.cursorStylePerMode.insert": "line",
    "vim.cursorStylePerMode.normal": "block",
    "vim.cursorStylePerMode.replace": "underline",
    "vim.highlightedyank.enable": true,
    "vim.incsearch": true,
    "vim.hlsearch": true,
    "vim.matchpairs": "(:),{:},[:],<:>",
    "vim.leader": ",",
    "vim.insertModeKeyBindings": [
        {
            "before": [
                "h",
                "u"
            ],
            "after": [
                "<Esc>"
            ]
        },
        {
            "before": [
                ",",
                "h"
            ],
            "after": [
                "<Esc>"
            ]
        },
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "R"
            ],
            "after": [
                "N"
            ]
        },
        {
            "before": [
                "N"
            ],
            "after": [
                "n"
            ]
        },
        {
            "before": [
                "h"
            ],
            "after": [
                "h"
            ]
        },
        {
            "before": [
                "t"
            ],
            "after": [
                "k"
            ]
        },
        {
            "before": [
                "n"
            ],
            "after": [
                "j"
            ]
        },
        {
            "before": [
                "s"
            ],
            "after": [
                "l"
            ]
        },
        {
            "before": [
                "`"
            ],
            "commands": [
                ":set hls!"
            ]
        },
        {
            "before": [
                "<Leader>",
                "s"
            ],
            "commands": [
                ":w"
            ]
        },
        {
            "before": [
                "<Leader>",
                "w"
            ],
            "commands": [
                ":w"
            ]
        },
        {
            "before": [
                "<Leader>",
                "p"
            ],
            "commands": [
                {
                    "command": "workbench.action.quickOpen",
                    "args": []
                }
            ]
        },
        {
            "before": [
                "<Leader>",
                "t"
            ],
            "commands": [
                {
                    "command": "workbench.action.showCommands",
                    "args": []
                }
            ]
        },
        {
            "before": [
                "<Leader>",
                "c"
            ],
            "commands": [
                {
                    "command": "workbench.action.togglePanel",
                    "args": []
                }
            ]
        },
        {
            "before": [
                "<Leader>",
                "l"
            ],
            "commands": [
                {
                    "command": "workbench.action.moveActiveEditorGroupLeft",
                    "args": []
                }
            ]
        },
        {
            "before": [
                "<Leader>",
                "r"
            ],
            "commands": [
                {
                    "command": "workbench.action.moveActiveEditorGroupRight",
                    "args": []
                }
            ]
        },
        {
            "before": [
                "<Leader>",
                "w"
            ],
            "commands": [
                ":w"
            ]
        },
        {
            "before": [
                "<Space>",
                "<Space>"
            ],
            "after": [
                "<Enter>"
            ]
        },
        {
            "before": [
                ";"
            ],
            "after": [
                ":"
            ]
        },
        {
            "before": [
                "d"
            ],
            "after": [
                "\"",
                "_",
                "d"
            ]
        },
        {
            "before": [
                "D"
            ],
            "after": [
                "\"",
                "_",
                "D"
            ]
        },
        {
            "before": [
                "d",
                "d"
            ],
            "after": [
                "\"",
                "_",
                "d",
                "d"
            ]
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [
                "h"
            ],
            "after": [
                "h"
            ]
        },
        {
            "before": [
                "t"
            ],
            "after": [
                "k"
            ]
        },
        {
            "before": [
                "n"
            ],
            "after": [
                "j"
            ]
        },
        {
            "before": [
                "s"
            ],
            "after": [
                "l"
            ]
        },
        {
            "before": [
                "`"
            ],
            "commands": [
                ":set hls!"
            ]
        },
        {
            "before": [
                "<Space>",
                "<Space>"
            ],
            "after": [
                "<Enter>"
            ]
        },
        {
            "before": [
                ";"
            ],
            "after": [
                ":"
            ]
        },
    ],
    "vim.commandLineModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<Space>",
                "<Space>"
            ],
            "after": [
                "<Enter>"
            ]
        },
    ],
    "security.workspace.trust.untrustedFiles": "open",
    "Lua.telemetry.enable": false,
    "git.alwaysShowStagedChangesResourceGroup": true,
    "git.autofetch": "all",
    // Vscode merge editor
    "git.mergeEditor": true,
    // Worst default true ever
    "editor.acceptSuggestionOnCommitCharacter": false,
    "editor.suggest.localityBonus": true,
    // Controls how suggestions are pre-selected when showing the suggest list.
    //  - first: Always select the first suggestion.
    //  - recentlyUsed: Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.
    //  - recentlyUsedByPrefix: Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`.
    "editor.suggestSelection": "recentlyUsed",
    "editor.renderWhitespace": "all",
    "explorer.confirmDelete": false,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "powershell.startAsLoginShell.linux": true,
    "workbench.editor.titleScrollbarSizing": "large",
    "workbench.editor.wrapTabs": true,
    "terminal.integrated.allowMnemonics": true,
    "terminal.integrated.cursorBlinking": true,
    "terminal.integrated.scrollback": 5000,
    "terminal.integrated.shellIntegration.enabled": true,
    "workbench.startupEditor": "none",
    "extensions.ignoreRecommendations": true,
    "editor.lineNumbers": "relative",
    "workbench.colorTheme": "Auska Dracula",
    "editor.fontFamily": "'Fira Code', Consolas",
    "editor.fontSize": 12,
    "editor.fontLigatures": true,
    "editor.fontWeight": "normal",
    "editor.tokenColorCustomizations": {
        "functions": "#9bee94",
        "textMateRules": [
            {
                "scope": [
                    "storage.type"
                ],
                "settings": {
                    "foreground": "#fdc2e3",
                    "fontStyle": "italic"
                }
            },
            {
                "scope": [
                    "entity.name.type"
                ],
                "settings": {
                    "foreground": "#97e1f1",
                    "fontStyle": ""
                }
            },
            {
                "scope": [
                    "keyword"
                ],
                "settings": {
                    "foreground": "#f286c4",
                    "fontStyle": "italic"
                }
            },
            {
                "scope": [
                    "keyword.operator"
                ],
                "settings": {
                    "foreground": "#f286c4",
                    "fontStyle": ""
                }
            },
            {
                "scope": [
                    "string.template",
                    "string.quoted.double"
                ],
                "settings": {
                    "foreground": "#e7ee98",
                    "fontStyle": "italic"
                }
            }
        ]
    },
    "workbench.settings.openDefaultSettings": true,
    "workbench.settings.openDefaultKeybindings": true,
    "workbench.sideBar.location": "right",
    "editor.autoIndent": "full",
    "editor.autoClosingBrackets": "never",
    "editor.autoClosingDelete": "never",
    "editor.autoClosingOvertype": "auto",
    "editor.autoClosingQuotes": "never",
    "editor.autoSurround": "never",
    "editor.bracketPairColorization.enabled": true,
    "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
    "git.confirmSync": false,
    "editor.inlineSuggest.enabled": true,
    "disable-copilot-comment-completions.active": true,
    "github.copilot.inlineSuggest.enable": true,
    "github.copilot.enable": {
        "*": true,
        "yaml": false,
        "plaintext": false,
        "markdown": true
    },
    "workbench.editor.highlightModifiedTabs": true,
    "editor.minimap.enabled": false,
    // Eslint setup
    "eslint.alwaysShowStatus": true,
    "eslint.lintTask.enable": true,
    "eslint.run": "onType",
    "eslint.codeActionsOnSave.mode": "all",
    // Eslint as formatter
    "eslint.format.enable": true,
    // Enable onsave
    "editor.codeActionsOnSave": {
        "source.fixAll.eslint": true
    },
    "workbench.panel.defaultLocation": "left",
    "autoHide.autoHidePanel": false,
    "githubPullRequests.terminalLinksHandler": "github",
    "tab-groups.gitBranchGroups": "Nothing",
    "tab-groups.relativePaths": true
}